apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "com.google.gms.google-services"
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.sifat.slushflicks"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0.1-alpha1"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation" : "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            androidTest.java.srcDirs += "src/testCommon/java"
            test.java.srcDirs += "src/testCommon/java"
            debug.assets.srcDirs += "src/debug/assets"
            release.assets.srcDirs += "src/release/assets"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "BASE_URL", '"https://api.themoviedb.org/"'
            buildConfigField 'String', "API_VERSION", '"3/"'
            buildConfigField 'String', "IMAGE_BASE_URL", '"http://image.tmdb.org/t/p/"'
            buildConfigField 'String', "DATABASE_NAME", '"slushflickdb"'
            buildConfigField 'String', "API_KEY", '"5bd74c7a7bbfad5678fe1acd33fe732a"'
            buildConfigField 'String', "DYNAMIC_LINK_BASE_URL", '"https://codecameo.github.io"'
            buildConfigField 'String', "DYNAMIC_LINK_DOMAIN", '"slushflicks.page.link"'
        }
        debug {
            buildConfigField 'String', "BASE_URL", '"https://api.themoviedb.org/"'
            buildConfigField 'String', "API_VERSION", '"3/"'
            buildConfigField 'String', "IMAGE_BASE_URL", '"http://image.tmdb.org/t/p/"'
            buildConfigField 'String', "DATABASE_NAME", '"slushflickdb_debug"'
            buildConfigField 'String', "API_KEY", '"5bd74c7a7bbfad5678fe1acd33fe732a"'
            buildConfigField 'String', "DYNAMIC_LINK_BASE_URL", '"https://codecameo.github.io"'
            buildConfigField 'String', "DYNAMIC_LINK_DOMAIN", '"slushflicks.page.link"'
        }
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.makeramen:roundedimageview:$roundimage_version"

    kapt "com.android.databinding:compiler:$databinding_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Dagger2 core
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //Navigation Component
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"

    // Paging Library
    implementation "android.arch.paging:runtime:$paging_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_ktx_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    //Lifecycle Components (ViewModel, LiveData and ReactiveStreams)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //LiveData Coroutines
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmer_version"

    // Firebase
    implementation "com.google.firebase:firebase-analytics:$analytics_version"
    implementation "com.google.firebase:firebase-crashlytics:$crashlytics_version"
    implementation "com.google.firebase:firebase-firestore-ktx:$firestore_ktx_version"
    implementation "com.google.firebase:firebase-dynamic-links:$dynamic_links_version"

    implementation "com.android.support:multidex:$multidex_version"

    //Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"

    // Testing
    androidTestImplementation "junit:junit:$junit4_version"
    // AndroidX test
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Architecture components testing
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"

    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"

    // JUnit Jupiter
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"
    testImplementation "org.junit.platform:junit-platform-runner:$junit5_runner_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junit5_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // Local test dependencies
    testImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"
    testImplementation "androidx.test.ext:junit:$junit_ext_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_version"
    testImplementation "androidx.test:runner:$androidx_test_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // MOCKITO
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    //testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}
